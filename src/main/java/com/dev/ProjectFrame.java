/*
 * MainFrame.java
 *
 * Created on Oct 24, 2011, 4:37:26 AM
 */
package com.dev;

import com.dev.shelltools.ShellProcess;

import javax.swing.*;
import java.awt.Component;
import java.awt.Image;
import java.awt.Toolkit;
import java.util.ArrayList;
import java.util.List;

public class ProjectFrame extends javax.swing.JFrame {

    private static final long serialVersionUID = 1L;
    private static final String LABEL_RUNNING = "Running...";
    private static final String LABEL_STOPPED = "Run>>";

    public static ProjectFrame projectFrame = null;

    private ProjectManager projectManager = null;

    private ShellProcess shellProcess = null;

    /**
     * Creates new form MainFrame
     */
    public ProjectFrame() {
        initComponents();

        this.setLocationRelativeTo(null);
        this.initData();
    }

    private void clearProjectData() {
        this.pnlCommand.removeAll();
    }

    private void initData() {
        this.projectManager = new ProjectManager();
        List<Project> projectList = projectManager.getProjects();
        //Set window title
        this.setTitle(ProjectManager.applicationName);
        //Bound project list combo box with project name
        this.cbProjectList.removeAllItems();
        for (Project p : projectList) {
            this.cbProjectList.addItem(p.getProjectName());
        }
        //Set the default loaded project.
        int selectedProjectIndex = 0;
        for (int i = 0; i < projectList.size(); ++i) {
            if (projectList.get(i).isSelected()) {
                selectedProjectIndex = i;
                break;
            }
        }
        this.cbProjectList.setSelectedIndex(selectedProjectIndex);
        this.showProject(projectList.get(selectedProjectIndex));

        //Set frame icon.
        Image icon = Toolkit.getDefaultToolkit().getImage(ProjectManager.BASE_DIR + "pic/palette.png");
        this.setIconImage(icon);
    }

    private void showProject(Project p) {
        this.clearProjectData();
        //this.pnlCommand.setLayout(new BoxLayout(p.getCmdList().size(), 1, 20, 50));
        List<Command> commandList = p.getCmdList();
        for (Command c : commandList) {
            this.pnlCommand.add(new CommandPanel(c));
        }
        this.setVisible(false);
        this.setVisible(true);
    }

    public void setRunning() {
        this.btnRunCommands.setText(LABEL_RUNNING);
    }

    public void setRunComplete() {
        this.btnRunCommands.setText(LABEL_STOPPED);
        for (Component c : this.pnlCommand.getComponents()) {
            CommandPanel cmdPanel = ((CommandPanel) c);
            if (cmdPanel.isSelected()) {
                cmdPanel.updateStatus();
            }
        }
    }

    public boolean isRunning() {
        return this.btnRunCommands.getText().equals(LABEL_RUNNING);
    }

    private void executeSelected() {
        List<Command> commands = new ArrayList<Command>();
        for (Component c : this.pnlCommand.getComponents()) {
            CommandPanel cmdPanel = ((CommandPanel) c);
            if (cmdPanel.isSelected()) {
                cmdPanel.getCommand().setCommandPane(cmdPanel);
                commands.add(cmdPanel.getCommand());
            }
        }

        this.shellProcess = new ShellProcess(commands);
        this.shellProcess.start();
        this.setRunning();
    }

    private void stopAllCommands() {
        this.shellProcess.stopShell();
    }

    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cbProjectList = new javax.swing.JComboBox();
        pnlCommand = new javax.swing.JPanel();
        btnRunCommands = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Select Project:");

        cbProjectList.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"Item 1", "Item 2", "Item 3", "Item 4"}));
        cbProjectList.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        cbProjectList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cbProjectListMouseEntered(evt);
            }

            public void mouseExited(java.awt.event.MouseEvent evt) {
                cbProjectListMouseExited(evt);
            }
        });
        cbProjectList.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbProjectListItemStateChanged(evt);
            }
        });
        cbProjectList.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                cbProjectListFocusLost(evt);
            }
        });

        pnlCommand.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, java.awt.Color.orange));
        pnlCommand.setAutoscrolls(true);

        pnlCommand.setMinimumSize(new java.awt.Dimension(0, 0));
        pnlCommand.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 2, 3));

        btnRunCommands.setText("Run>>");
        btnRunCommands.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnRunCommands.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRunCommandsMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(77, 77, 77)
                                                .addComponent(jLabel1)
                                                .addGap(18, 18, 18)
                                                .addComponent(cbProjectList, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(106, 106, 106)
                                                .addComponent(btnRunCommands, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(pnlCommand, javax.swing.GroupLayout.DEFAULT_SIZE, 746, Short.MAX_VALUE)))
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel1)
                                        .addComponent(cbProjectList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnRunCommands, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(pnlCommand, javax.swing.GroupLayout.DEFAULT_SIZE, 555, Short.MAX_VALUE)
                                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRunCommandsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRunCommandsMouseClicked
        if (this.isRunning()) {
            this.stopAllCommands();
        } else
            this.executeSelected();
    }//GEN-LAST:event_btnRunCommandsMouseClicked

    private void cbProjectListMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbProjectListMouseEntered
        this.cbProjectList.setPopupVisible(true);
    }//GEN-LAST:event_cbProjectListMouseEntered

    private void cbProjectListMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbProjectListMouseExited

    }//GEN-LAST:event_cbProjectListMouseExited

    private void cbProjectListFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cbProjectListFocusLost
        this.cbProjectList.setPopupVisible(false);
    }//GEN-LAST:event_cbProjectListFocusLost

    private void cbProjectListItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbProjectListItemStateChanged
        if (this.cbProjectList.getItemCount() < 1) return;
        this.showProject(this.projectManager.getByName(this.cbProjectList.getSelectedItem().toString().trim()));
    }//GEN-LAST:event_cbProjectListItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            // Set System L&F
            UIManager.setLookAndFeel(
                    UIManager.getSystemLookAndFeelClassName());
        } catch (Exception e) {
            e.printStackTrace();
        }

        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                if (projectFrame == null) projectFrame = new ProjectFrame();
                projectFrame.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRunCommands;
    private javax.swing.JComboBox cbProjectList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel pnlCommand;
    // End of variables declaration//GEN-END:variables
}
